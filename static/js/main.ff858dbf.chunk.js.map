{"version":3,"sources":["includes/jquery.js","includes/popper.js","redux/constants.js","redux/actions/authActionCreators.js","components/login.component.js","components/register.component.js","pages/authpage.component.js","components/pagination.component.js","redux/actions/publicationsActionCreators.js","components/publicationscollection.component.js","pages/publicationspage.component.js","components/publicationtrend.component.js","pages/publicationtrendpage.component.js","pages/editpublicationpage.component.js","components/header.component.js","components/spinner/spinner.component.js","App.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/reducers/loadingReducer.js","redux/reducers/publicationsReducer.js","redux/middlewares.js","apiUrl.js","index.js","redux/configureStore.js"],"names":["window","jQuery","$","Popper","API","SET_USER_INFO","TOGGLE_LOADER","RESET_USER_INFO","SET_ALL_PUBLICATIONS","ADD_PUBLICATION","REMOVE_PUBLICATION","UPDATE_PUBLICATION","logoutUser","localStorage","removeItem","type","constants","setUserInfo","data","parsedToken","JSON","parse","atob","token","split","userInfo","userId","id","fullName","firstName","lastName","isLoggedIn","setItem","stringify","payload","connect","dispatch","dispatchLoginAction","email","password","onSuccess","onError","method","url","success","response","postProcessSuccess","postProcessError","loginUser","useState","setEmail","setPassword","error","setError","isFormInvalid","updateErrorFlags","errorObj","trim","Fragment","noValidate","onSubmit","event","preventDefault","toast","message","className","htmlFor","name","placeholder","value","onChange","e","target","onClick","dispatchRegisterAction","registerUser","setFirstName","setLastName","AuthPage","style","border","Pagination","page","onPageChange","itemsTotal","itemsPerPage","totalPages","Math","ceil","aria-label","disabled","fetchAllPublications","setAllPublications","addPublication","note","updatePublication","publicationId","removePublication","dispatchDeleteAction","deletePublicationById","publications","pageNumber","setPageNumber","selectedPublication","setSelectedPublication","newPageNumber","length","scope","slice","map","item","to","_id","publicationType","title","authors","creationDate","href","modal","handleOnDelete","Modal","tabIndex","role","data-dismiss","state","loading","dispatchFetchAllPublicationsAction","useEffect","require","Highcharts","PublicationTrend","getTotalPublicationByYear","filteredPublications","filter","p","timeRange","range","totalPublicationsByYear","times","constant","forEach","publication","publicationYear","Date","getFullYear","index","indexOf","highcharts","options","credits","enabled","exporting","text","subtitle","yAxis","xAxis","accessibility","rangeDescription","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","category","responsive","rules","condition","maxWidth","chartOptions","dispatchCreatePublicationAction","createPublication","dispatchUpdatePublicationAction","updatePublicationById","dispatchGetPublicationByIdAction","getPublicationById","match","history","setPublicationType","setTitle","setAuthors","setCreationDate","params","isNaN","replace","Header","userName","onLogout","isLoading","user","dispatchLogoutAction","position","autoClose","hideProgressBar","transition","Slide","exact","path","component","PublicationTrendPage","PublicationsPage","EditPublicationPage","defaultState","getItem","INITIAL_STATE","rootReducer","combineReducers","action","concat","apiMiddleware","getState","next","AUTH_TOKEN","axios","defaults","headers","common","then","catch","err","status","console","warn","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff858dbf.chunk.js","sourcesContent":["import * as $ from 'jquery';\n\nwindow.jQuery = window.$ = $;\n","import Popper from 'popper.js';\n\nwindow.Popper = Popper;\n","export const API = 'API';\nexport const SET_USER_INFO = 'SET_USER_INFO';\nexport const TOGGLE_LOADER = 'TOGGLE_LOADER';\nexport const RESET_USER_INFO = 'RESET_USER_INFO';\n\nexport const SET_ALL_PUBLICATIONS = 'SET_ALL_PUBLICATIONS';\nexport const ADD_PUBLICATION = 'ADD_PUBLICATION';\nexport const REMOVE_PUBLICATION = 'REMOVE_PUBLICATION';\nexport const UPDATE_PUBLICATION = 'UPDATE_PUBLICATION';\n","import * as constants from '../constants';\n\nexport const registerUser = (data, onSuccess, onError) => ({\n  type: constants.API,\n  payload: {\n    method: 'POST',\n    url: '/api/users/register',\n    data,\n    success: (response) => setUserInfo(response),\n    postProcessSuccess: onSuccess,\n    postProcessError: onError,\n  },\n});\n\nexport const loginUser = (data, onSuccess, onError) => ({\n  type: constants.API,\n  payload: {\n    method: 'POST',\n    url: '/api/users/login',\n    data,\n    success: (response) => setUserInfo(response),\n    postProcessSuccess: onSuccess,\n    postProcessError: onError,\n  },\n});\n\nexport const logoutUser = () => {\n  localStorage.removeItem('USER_INFO');\n  return { type: constants.RESET_USER_INFO };\n};\n\nconst setUserInfo = (data) => {\n  const parsedToken = JSON.parse(atob(data.token.split('.')[1]));\n  const userInfo = {\n    userId: parsedToken.id,\n    fullName: `${parsedToken.firstName} ${parsedToken.lastName}`,\n    token: data.token,\n    isLoggedIn: true,\n  };\n  localStorage.setItem('USER_INFO', JSON.stringify(userInfo));\n  return {\n    type: constants.SET_USER_INFO,\n    payload: userInfo,\n  };\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { loginUser } from './../redux/actions/authActionCreators';\n\nconst LoginForm = ({ dispatchLoginAction }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState({ email: false, password: false });\n\n  const handleOnSubmit = (event) => {\n    event.preventDefault();\n    if (isFormInvalid()) {\n      updateErrorFlags();\n    } else {\n      dispatchLoginAction(\n        email,\n        password,\n        () => toast.success('Logged In Successfully!'),\n        (message) => toast.error(`Error: ${message}`)\n      );\n    }\n  };\n\n  const handleCancelForm = (event) => {\n    event.preventDefault();\n    setEmail('');\n    setPassword('');\n    setError({ email: false, password: false });\n  };\n\n  const isFormInvalid = () => !email || !password;\n\n  const updateErrorFlags = () => {\n    const errorObj = { email: false, password: false };\n    if (!email.trim()) errorObj.email = true;\n    if (!password.trim()) errorObj.password = true;\n    setError(errorObj);\n  };\n\n  return (\n    <React.Fragment>\n      <h2>Have an account ?</h2>\n      <h4>Login here</h4>\n      <br />\n\n      <form noValidate onSubmit={handleOnSubmit}>\n        <div className='form-group'>\n          <label htmlFor='email'>Email address</label>\n          <input\n            noValidate\n            id='email'\n            type='email'\n            name='email'\n            placeholder='Email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className={`form-control ${error.email ? 'is-invalid' : ''}`}\n          />\n          <p className='invalid-feedback'>Required</p>\n        </div>\n        <div className='form-group'>\n          <label htmlFor='password'>Password</label>\n          <input\n            noValidate\n            id='password'\n            type='password'\n            name='password'\n            placeholder='password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className={`form-control ${error.password ? 'is-invalid' : ''}`}\n          />\n          <p className='invalid-feedback'>Required</p>\n        </div>\n\n        <button type='submit' className='btn btn-primary mr-2'>\n          Login | <i className='fas fa-sign-in-alt' />\n        </button>\n        <button\n          onClick={handleCancelForm}\n          className='btn btn-outline-secondary'\n        >\n          Cancel | <i className='fas fa-times' />\n        </button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchLoginAction: (email, password, onSuccess, onError) =>\n    dispatch(loginUser({ email, password }, onSuccess, onError)),\n});\n\nexport default connect(null, mapDispatchToProps)(LoginForm);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { registerUser } from '../redux/actions/authActionCreators';\n\nconst RegisterForm = ({ dispatchRegisterAction }) => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState({\n    firstName: false,\n    lastName: false,\n    email: false,\n    password: false,\n  });\n\n  const handleOnSubmit = (event) => {\n    event.preventDefault();\n    if (isFormInvalid()) {\n      updateErrorFlags();\n    } else {\n      dispatchRegisterAction(\n        firstName,\n        lastName,\n        email,\n        password,\n        () => toast.success('Account Created Successfully!'),\n        (message) => toast.error(`Error: ${message}`)\n      );\n    }\n  };\n\n  const handleCancelForm = (event) => {\n    event.preventDefault();\n    setFirstName('');\n    setLastName('');\n    setEmail('');\n    setPassword('');\n    setError({\n      firstName: false,\n      lastName: false,\n      email: false,\n      password: false,\n    });\n  };\n\n  const isFormInvalid = () => !firstName || !lastName || !email || !password;\n\n  const updateErrorFlags = () => {\n    const errorObj = {\n      firstName: false,\n      lastName: false,\n      email: false,\n      password: false,\n    };\n    if (!firstName.trim()) errorObj.firstName = true;\n    if (!lastName.trim()) errorObj.lastName = true;\n    if (!email.trim()) errorObj.email = true;\n    if (!password.trim()) errorObj.password = true;\n    setError(errorObj);\n  };\n\n  return (\n    <React.Fragment>\n      <h2>New User ?</h2>\n      <h4>Create an account</h4>\n      <br />\n\n      <form noValidate onSubmit={handleOnSubmit}>\n        <div className='form-group'>\n          <label htmlFor='firstName'>First Name</label>\n          <input\n            noValidate\n            id='firstName'\n            type='text'\n            name='firstName'\n            placeholder='First Name'\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n            className={`form-control ${error.email ? 'is-invalid' : ''}`}\n          />\n          <p className='invalid-feedback'>Required</p>\n        </div>\n        <div className='form-group'>\n          <label htmlFor='lastName'>Last Name</label>\n          <input\n            noValidate\n            id='lastName'\n            type='text'\n            name='lastName'\n            placeholder='Last Name'\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n            className={`form-control ${error.email ? 'is-invalid' : ''}`}\n          />\n          <p className='invalid-feedback'>Required</p>\n        </div>\n        <div className='form-group'>\n          <label htmlFor='email1'>Email address</label>\n          <input\n            noValidate\n            id='email1'\n            type='email'\n            name='email'\n            placeholder='Email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className={`form-control ${error.email ? 'is-invalid' : ''}`}\n          />\n          <p className='invalid-feedback'>Required</p>\n        </div>\n        <div className='form-group'>\n          <label htmlFor='password1'>Password</label>\n          <input\n            noValidate\n            id='password1'\n            type='password'\n            name='password'\n            placeholder='password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className={`form-control ${error.email ? 'is-invalid' : ''}`}\n          />\n          <p className='invalid-feedback'>Required</p>\n        </div>\n\n        <button type='submit' className='btn btn-primary mr-2'>\n          Register | <i className='fas fa-user-plus' />\n        </button>\n        <button\n          onClick={handleCancelForm}\n          className='btn btn-outline-secondary'\n        >\n          Cancel | <i className='fas fa-times' />\n        </button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchRegisterAction: (\n    firstName,\n    lastName,\n    email,\n    password,\n    onSuccess,\n    onError\n  ) =>\n    dispatch(\n      registerUser({ firstName, lastName, email, password }, onSuccess, onError)\n    ),\n});\n\nexport default connect(null, mapDispatchToProps)(RegisterForm);\n","import React from 'react';\nimport LoginForm from '../components/login.component';\nimport RegisterForm from '../components/register.component';\n\nconst AuthPage = () => (\n  <div className='row justify-content-between'>\n    <div className='col-md-5'>\n      <LoginForm />\n    </div>\n    <div style={{ border: '1px solid #ababab' }}></div>\n    <div className='col-md-6'>\n      <RegisterForm />\n    </div>\n  </div>\n);\n\nexport default AuthPage;\n","import React from 'react';\n\nconst Pagination = ({ page, onPageChange, itemsTotal, itemsPerPage }) => {\n  const totalPages = () => Math.ceil(itemsTotal / itemsPerPage);\n\n  return (\n    <nav aria-label='Page navigation example'>\n      <ul className='pagination'>\n        <li className='page-item'>\n          <button\n            className='page-link'\n            disabled={page <= 1}\n            onClick={() => onPageChange(1)}\n          >\n            First\n          </button>\n        </li>\n        <li className='page-item'>\n          <button\n            className='page-link'\n            disabled={page <= 1}\n            onClick={() => onPageChange(page - 1)}\n          >\n            Previous\n          </button>\n        </li>\n        <li className='page-item'>\n          <button\n            className='page-link'\n            disabled={page >= totalPages()}\n            onClick={() => onPageChange(page + 1)}\n          >\n            Next\n          </button>\n        </li>\n        <li className='page-item'>\n          <button\n            className='page-link'\n            disabled={page >= totalPages()}\n            onClick={() => onPageChange(totalPages())}\n          >\n            Last\n          </button>\n        </li>\n        <li className='ml-4 my-auto'>\n          {page}/{totalPages()}\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import * as constants from '../constants';\n\nexport const fetchAllPublications = () => ({\n  type: constants.API,\n  payload: {\n    method: 'GET',\n    url: '/api/publications',\n    success: (response) => setAllPublications(response),\n  },\n});\n\nexport const createPublication = (data, onSuccess, onError) => ({\n  type: constants.API,\n  payload: {\n    method: 'POST',\n    url: '/api/publications',\n    data,\n    success: (publication) => addPublication(publication),\n    postProcessSuccess: onSuccess,\n    postProcessError: onError,\n  },\n});\n\nexport const getPublicationById = (publicationId, onSuccess) => ({\n  type: constants.API,\n  payload: {\n    method: 'GET',\n    url: `/api/publications/${publicationId}`,\n    postProcessSuccess: onSuccess,\n  },\n});\n\nexport const updatePublicationById = (\n  publicationId,\n  data,\n  onSuccess,\n  onError\n) => ({\n  type: constants.API,\n  payload: {\n    method: 'PUT',\n    url: `/api/publications/${publicationId}`,\n    data,\n    success: (publicationId, data) => updatePublication(publicationId, data),\n    postProcessSuccess: onSuccess,\n    postProcessError: onError,\n  },\n});\n\nexport const deletePublicationById = (publicationId, onSuccess, onError) => ({\n  type: constants.API,\n  payload: {\n    method: 'DELETE',\n    url: `/api/publications/${publicationId}`,\n    success: () => removePublication(publicationId),\n    postProcessSuccess: onSuccess,\n    postProcessError: onError,\n  },\n});\n\nconst addPublication = (note) => ({\n  type: constants.ADD_PUBLICATION,\n  payload: note,\n});\n\nconst setAllPublications = (data) => ({\n  type: constants.SET_ALL_PUBLICATIONS,\n  payload: data,\n});\n\nconst updatePublication = (publicationId, data) => ({\n  type: constants.UPDATE_PUBLICATION,\n  payload: {\n    publicationId,\n    data,\n  },\n});\n\nconst removePublication = (publicationId) => ({\n  type: constants.REMOVE_PUBLICATION,\n  payload: publicationId,\n});\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport Pagination from './pagination.component';\n\nimport { deletePublicationById } from './../redux/actions/publicationsActionCreators';\n\nconst PublicationsCollection = ({ publications, dispatchDeleteAction }) => {\n  const pageSize = 10;\n  const [pageNumber, setPageNumber] = useState(1);\n  const [selectedPublication, setSelectedPublication] = useState('');\n\n  const showConfirmationModal = (event, publicationId) => {\n    event.preventDefault();\n    setSelectedPublication(publicationId);\n    window.$('#confirmationModal').modal('show');\n  };\n\n  const handleOnDelete = () => {\n    dispatchDeleteAction(\n      selectedPublication,\n      () => {\n        window.$('#confirmationModal').modal('hide');\n        toast.success('Publication Deleted Successfully!');\n      },\n      (message) => {\n        window.$('#confirmationModal').modal('hide');\n        toast.error(`Error: ${message}`);\n      }\n    );\n  };\n\n  const getPublicationsForCurrentPage = () =>\n    publications.slice(pageSize * (pageNumber - 1), pageSize * pageNumber);\n\n  const pageChange = (newPageNumber) => {\n    setPageNumber(newPageNumber);\n  };\n\n  return (\n    <React.Fragment>\n      <Pagination\n        page={pageNumber}\n        onPageChange={pageChange}\n        itemsPerPage={pageSize}\n        itemsTotal={publications.length}\n      />\n      <table className='table table-hover'>\n        <thead className='thead-dark'>\n          <tr>\n            <th scope='col'>Publication Type</th>\n            <th scope='col'>Title</th>\n            <th scope='col'>Authors</th>\n            <th scope='col' className='creation-date-display'>\n              Creation Date\n            </th>\n            <th scope='col'></th>\n          </tr>\n        </thead>\n        <tbody>\n          {getPublicationsForCurrentPage().map((item) => (\n            <tr key={item._id}>\n              <td>\n                <Link to={`/publication-createorupdate/${item._id}`}>\n                  {item.publicationType}\n                </Link>\n              </td>\n              <td>{item.title}</td>\n              <td>{item.authors}</td>\n              <td>{item.creationDate}</td>\n              <td>\n                <a href='/' onClick={(e) => showConfirmationModal(e, item._id)}>\n                  <i className='fas fa-trash-alt fa-lg text-danger' />\n                </a>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <Modal handleOnDelete={handleOnDelete} />\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchDeleteAction: (publicationId, onSuccess, onError) =>\n    dispatch(deletePublicationById(publicationId, onSuccess, onError)),\n});\n\nexport default connect(null, mapDispatchToProps)(PublicationsCollection);\n\nconst Modal = ({ handleOnDelete }) => (\n  <div className='modal' id='confirmationModal' tabIndex='-1' role='dialog'>\n    <div role='document' className='modal-dialog'>\n      <div className='modal-content'>\n        <div className='modal-header'>\n          <h5 className='modal-title'>Confirmation</h5>\n        </div>\n        <div className='modal-body'>\n          <p>Are you sure, you want to delete this publication ?</p>\n        </div>\n        <div className='modal-footer'>\n          <button\n            type='button'\n            data-dismiss='modal'\n            className='btn btn-secondary'\n          >\n            No\n          </button>\n          <button\n            type='button'\n            onClick={handleOnDelete}\n            data-dismiss='modal'\n            className='btn btn-primary'\n          >\n            Yes\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport PublicationsCollection from '../components/publicationscollection.component';\n\nimport { fetchAllPublications } from './../redux/actions/publicationsActionCreators';\n\nconst PublicationsPage = ({\n  loading,\n  publications,\n  dispatchFetchAllPublicationsAction,\n}) => {\n  useEffect(() => dispatchFetchAllPublicationsAction(), [\n    dispatchFetchAllPublicationsAction,\n  ]);\n\n  return (\n    <React.Fragment>\n      <div className='row my-5'>\n        <div className='offset-9 col-2'>\n          <Link to='/publication-createorupdate' className='btn btn-primary'>\n            Create Publication | <i className='fas fa-plus' />\n          </Link>\n        </div>\n      </div>\n\n      <div className='row mt-5'>\n        <div className='col-12'>\n          {publications.length > 0 ? (\n            <PublicationsCollection publications={publications} />\n          ) : (\n            !loading && (\n              <div className='text-center mt-5'>\n                <h2>\n                  <i className='far fa-folder-open fa-3x' />\n                </h2>\n                <h1 className='text-center'>\n                  There are no publications available\n                </h1>\n              </div>\n            )\n          )}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.loading,\n  publications: state.publications,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchFetchAllPublicationsAction: () => dispatch(fetchAllPublications()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(PublicationsPage);\n","import React from 'react';\nimport { constant, range, times } from 'lodash';\n\nimport Highcharts from 'highcharts/highstock';\nimport HighchartsReact from 'highcharts-react-official';\n\nrequire('highcharts/modules/exporting')(Highcharts);\n\nconst PublicationTrend = ({ publications }) => {\n  const getTotalPublicationByYear = (publicationType) => {\n    const filteredPublications = publications.filter(\n      (p) => p.publicationType === publicationType\n    );\n    const timeRange = range(2011, 2022);\n    const totalPublicationsByYear = times(timeRange.length, constant(0));\n\n    filteredPublications.forEach((publication) => {\n      const publicationYear = new Date(publication.creationDate).getFullYear();\n      const index = timeRange.indexOf(publicationYear);\n      totalPublicationsByYear[index] += 1;\n    });\n\n    return totalPublicationsByYear;\n  };\n\n  const getCategoryData = () =>\n    [\n      'Books & Book Chapters',\n      'Consultant Report',\n      'Cost Recovery (CR) report',\n      'Journal',\n      'Other Publication',\n      'Poster',\n      'Presentation',\n      'Conference Proceedings',\n      'Internal technical report',\n    ].map((category) => ({\n      name: category,\n      data: getTotalPublicationByYear(category),\n    }));\n\n  const generateOptions = () => {\n    return {\n      credits: {\n        enabled: false,\n      },\n      exporting: { enabled: true },\n      title: {\n        text: 'Publications',\n      },\n      subtitle: {\n        text: 'Source: Natural Resources Canada (NRCan)',\n      },\n      yAxis: {\n        title: {\n          text: 'Total',\n        },\n      },\n      xAxis: {\n        accessibility: {\n          rangeDescription: 'Range: 2011 to 2021',\n        },\n      },\n      legend: {\n        layout: 'vertical',\n        align: 'right',\n        verticalAlign: 'middle',\n      },\n      plotOptions: {\n        series: {\n          label: {\n            connectorAllowed: false,\n          },\n          pointStart: 2011,\n        },\n      },\n      series: getCategoryData(),\n      responsive: {\n        rules: [\n          {\n            condition: {\n              maxWidth: 500,\n            },\n            chartOptions: {\n              legend: {\n                layout: 'horizontal',\n                align: 'center',\n                verticalAlign: 'bottom',\n              },\n            },\n          },\n        ],\n      },\n    };\n  };\n\n  return (\n    <HighchartsReact highcharts={Highcharts} options={generateOptions()} />\n  );\n};\n\nexport default PublicationTrend;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport PublicationTrend from '../components/publicationtrend.component';\n\nimport { fetchAllPublications } from './../redux/actions/publicationsActionCreators';\n\nconst PublicationTrendPage = ({\n  loading,\n  publications,\n  dispatchFetchAllPublicationsAction,\n}) => {\n  useEffect(() => dispatchFetchAllPublicationsAction(), [\n    dispatchFetchAllPublicationsAction,\n  ]);\n\n  return (\n    <div className='row mt-5'>\n      <div className='col-12'>\n        {publications.length > 0 ? (\n          <PublicationTrend publications={publications} />\n        ) : (\n          !loading && (\n            <div className='text-center mt-5'>\n              <h2>\n                <i className='far fa-folder-open fa-3x' />\n              </h2>\n              <h1 className='text-center'>\n                There are no publication trends available\n              </h1>\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.loading,\n  publications: state.publications,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchFetchAllPublicationsAction: () => dispatch(fetchAllPublications()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PublicationTrendPage);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport {\n  createPublication,\n  getPublicationById,\n  updatePublicationById,\n} from '../redux/actions/publicationsActionCreators';\n\nconst EditPublicationPage = ({\n  match,\n  history,\n  dispatchCreatePublicationAction,\n  dispatchGetPublicationByIdAction,\n  dispatchUpdatePublicationAction,\n}) => {\n  const [publicationType, setPublicationType] = useState('');\n  const [title, setTitle] = useState('');\n  const [authors, setAuthors] = useState('');\n  const [creationDate, setCreationDate] = useState('');\n  const [error, setError] = useState({\n    publicationType: false,\n    title: false,\n    authors: false,\n    creationDate: false,\n  });\n\n  useEffect(() => {\n    const { publicationId } = match.params;\n    if (publicationId) {\n      dispatchGetPublicationByIdAction(\n        publicationId,\n        ({ publicationType, title, authors, creationDate }) => {\n          setPublicationType(publicationType);\n          setTitle(title);\n          setAuthors(authors);\n          setCreationDate(creationDate);\n        }\n      );\n    }\n  }, [dispatchGetPublicationByIdAction, match.params]);\n\n  const handleOnSubmit = (event) => {\n    event.preventDefault();\n    if (isFormInvalid()) {\n      updateErrorFlags();\n    } else {\n      const { publicationId } = match.params;\n      const data = { publicationType, title, authors, creationDate };\n      // if publicationId is present, we are in edit/update mode for an existing publication\n      // else, we are on the page filling out the contents for a new publication\n      if (publicationId) {\n        dispatchUpdatePublicationAction(\n          publicationId,\n          data,\n          () => {\n            toast.success('Publication Updated Successfully!');\n            history.replace('/publication-listing');\n          },\n          (message) => toast.error(`Error: ${message}`)\n        );\n      } else {\n        dispatchCreatePublicationAction(\n          data,\n          () => {\n            toast.success('Publication Created Successfully!');\n            history.replace('/publication-listing');\n          },\n          (message) => toast.error(`Error: ${message}`)\n        );\n      }\n    }\n  };\n\n  const isFormInvalid = () =>\n    !publicationType.trim() ||\n    !title.trim() ||\n    !authors.trim() ||\n    !creationDate.trim() ||\n    isNaN(new Date(creationDate));\n\n  const updateErrorFlags = () => {\n    const errorObj = {\n      publicationType: false,\n      title: false,\n      authors: false,\n      creationDate: false,\n    };\n    if (!publicationType.trim()) errorObj.publicationType = true;\n    if (!title.trim()) errorObj.title = true;\n    if (!authors.trim()) errorObj.authors = true;\n    if (!creationDate.trim() || isNaN(new Date(creationDate)))\n      errorObj.creationDate = true;\n    setError(errorObj);\n  };\n\n  return (\n    <React.Fragment>\n      <div className='row'>\n        <div className='col'>\n          <h2>Edit Publication</h2>\n        </div>\n      </div>\n      <div className='row align-items-center mt-4'>\n        <div className='col-9'>\n          <form noValidate onSubmit={handleOnSubmit}>\n            <div className='form-group'>\n              <label htmlFor='publicationType'>Publication Type</label>\n              <select\n                noValidate\n                id='publicationType'\n                name='publicationType'\n                className={`form-control ${\n                  error.publicationType ? 'is-invalid' : ''\n                }`}\n                value={publicationType}\n                onChange={(e) => setPublicationType(e.target.value)}\n              >\n                <option value=''>-- Select --</option>\n                <option value='Books &#38; Book Chapters'>\n                  Books &#38; Book Chapters\n                </option>\n                <option value='Consultant Report'>Consultant Report</option>\n                <option value='Cost Recovery (CR) report'>\n                  Cost Recovery (CR) report\n                </option>\n                <option value='Journal'>Journal</option>\n                <option value='Other Publication'>Other Publication</option>\n                <option value='Poster'>Poster</option>\n                <option value='Presentation'>Presentation</option>\n                <option value='Conference Proceedings'>\n                  Conference Proceedings\n                </option>\n                <option value='Internal technical report'>\n                  Internal technical report\n                </option>\n              </select>\n              <p className='invalid-feedback'>Required</p>\n            </div>\n\n            <div className='form-group'>\n              <label htmlFor='title'>Title</label>\n              <input\n                noValidate\n                id='title'\n                type='text'\n                placeholder='Title'\n                name='title'\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                className={`form-control ${error.title ? 'is-invalid' : ''}`}\n              />\n              <p className='invalid-feedback'>Required</p>\n            </div>\n\n            <div className='form-group'>\n              <label htmlFor='authors'>Authors</label>\n              <input\n                noValidate\n                id='authors'\n                type='text'\n                placeholder='Authors'\n                name='authors'\n                value={authors}\n                onChange={(e) => setAuthors(e.target.value)}\n                className={`form-control ${error.authors ? 'is-invalid' : ''}`}\n              />\n              <p className='invalid-feedback'>Required</p>\n            </div>\n\n            <div className='form-group'>\n              <label htmlFor='creationDate'>Creation Date</label>\n              <input\n                noValidate\n                id='creationDate'\n                type='text'\n                placeholder='CreationDate'\n                name='creationDate'\n                value={creationDate}\n                onChange={(e) => setCreationDate(e.target.value)}\n                className={`form-control ${\n                  error.creationDate ? 'is-invalid' : ''\n                }`}\n              />\n              <p className='invalid-feedback'>Required (YYYY-MM-DD)</p>\n            </div>\n\n            <div className='mt-5'>\n              <button type='submit' className='btn btn-primary mr-2 btn-lg'>\n                Save | <i className='fas fa-save' />\n              </button>\n              <button\n                type='button'\n                onClick={() => history.replace('/publication-listing')}\n                className='btn btn-secondary btn-lg'\n              >\n                Cancel | <i className='fas fa-times' />\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchCreatePublicationAction: (data, onSuccess, onError) =>\n    dispatch(createPublication(data, onSuccess, onError)),\n  dispatchUpdatePublicationAction: (publicationId, data, onSuccess, onError) =>\n    dispatch(updatePublicationById(publicationId, data, onSuccess, onError)),\n  dispatchGetPublicationByIdAction: (publicationId, onSuccess) =>\n    dispatch(getPublicationById(publicationId, onSuccess)),\n});\n\nexport default connect(null, mapDispatchToProps)(EditPublicationPage);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = ({ userName, isLoggedIn, onLogout }) => (\n  <nav className='navbar navbar-expand-sm bg-dark navbar-dark'>\n    <Link className='navbar-brand' to='/'>\n      <i className='fas fa-book fa-lg'></i>\n      <span className='pl-2'>Publications</span>\n    </Link>\n\n    {isLoggedIn && (\n      <ul className='navbar-nav'>\n        <li className='nav-item'>\n          <Link className='nav-link' to='/publication-listing'>\n            <span className='pl-2'>Listing</span>\n          </Link>\n        </li>\n        <li className='nav-item'>\n          <Link className='nav-link' to='/publication-trend'>\n            <span className='pl-2'>Trend</span>\n          </Link>\n        </li>\n      </ul>\n    )}\n    {isLoggedIn && (\n      <h4 className='ml-auto mr-4 my-auto'>\n        <span className='badge badge-pill badge-secondary text-capitalize small'>\n          Welcome {userName} !\n        </span>\n      </h4>\n    )}\n    {isLoggedIn && (\n      <button\n        type='button'\n        onClick={onLogout}\n        className='btn btn-sm btn-outline-warning'\n      >\n        Logout | <i className='fas fa-sign-out-alt' />\n      </button>\n    )}\n  </nav>\n);\n\nexport default Header;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './spinner.css';\n\nconst Spinner = ({ isLoading }) => (\n  <React.Fragment>\n    {isLoading ? (\n      <div id='spinner-fade'>\n        <div className='default-spinner spinner-border' role='status'></div>\n      </div>\n    ) : null }\n  </React.Fragment>\n);\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.loading,\n});\n\nexport default connect(mapStateToProps)(Spinner);\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, Slide } from 'react-toastify';\n\nimport AuthPage from './pages/authpage.component';\nimport PublicationsPage from './pages/publicationspage.component';\nimport PublicationTrendPage from './pages/publicationtrendpage.component';\nimport EditPublicationPage from './pages/editpublicationpage.component';\n\nimport Header from './components/header.component';\nimport Spinner from './components/spinner/spinner.component';\n\nimport { logoutUser } from './redux/actions/authActionCreators';\n\nconst App = ({ user, dispatchLogoutAction }) => {\n  return (\n    <React.Fragment>\n      <ToastContainer\n        position='top-right'\n        autoClose={2000}\n        hideProgressBar\n        transition={Slide}\n      />\n      <Spinner />\n      <Header\n        isLoggedIn={user.isLoggedIn}\n        userName={user.fullName}\n        onLogout={dispatchLogoutAction}\n      />\n      <div className='container my-5'>\n        {!user.isLoggedIn ? (\n          <Switch>\n            <Route exact path='/auth' component={AuthPage} />\n            <Redirect to='/auth' />\n          </Switch>\n        ) : (\n          <Switch>\n            <Route\n              exact\n              path='/publication-trend'\n              component={PublicationTrendPage}\n            />\n            <Route\n              exact\n              path='/publication-listing'\n              component={PublicationsPage}\n            />\n            <Route\n              exact\n              path='/publication-createorupdate'\n              component={EditPublicationPage}\n            />\n            <Route\n              exact\n              path='/publication-createorupdate/:publicationId'\n              component={EditPublicationPage}\n            />\n            <Redirect to='/publication-listing' />\n          </Switch>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchLogoutAction: () => dispatch(logoutUser()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as constants from './../constants';\n\nconst defaultState = {\n  userId: null,\n  fullName: null,\n  token: null,\n  isLoggedIn: false,\n};\n\nconst userInfo = localStorage.getItem('USER_INFO');\nconst INITIAL_STATE = userInfo ? JSON.parse(userInfo) : defaultState;\n\nexport default function userReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case constants.SET_USER_INFO:\n      return { ...action.payload };\n    case constants.RESET_USER_INFO:\n      return { ...defaultState };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport user from './userReducer';\nimport loading from './loadingReducer';\nimport publications from './publicationsReducer';\n\nconst rootReducer = combineReducers({ user, loading, publications });\n\nexport default rootReducer;\n","import * as constants from './../constants';\n\nexport default function loadingReducer(state = false, action) {\n  switch (action.type) {\n    case constants.TOGGLE_LOADER:\n      return !state;\n    default:\n      return state;\n  }\n}\n","import * as constants from '../constants';\n\nexport default function publicationsReducer(state = [], action) {\n  switch (action.type) {\n    case constants.SET_ALL_PUBLICATIONS:\n      return action.payload;\n    case constants.ADD_PUBLICATION:\n      return state.concat(action.payload);\n    case constants.REMOVE_PUBLICATION:\n      return state.filter((item) => item._id !== action.payload);\n    case constants.UPDATE_PUBLICATION:\n      return state.map((item) => {\n        if (item._id === action.payload.publicationId) {\n          return { ...item, ...action.payload.data };\n        } else {\n          return item;\n        }\n      });\n    case constants.RESET_USER_INFO:\n      return [];\n    default:\n      return state;\n  }\n}\n","import axios from 'axios';\n\nimport * as constants from './constants';\nimport { API_URL } from \"./../apiUrl.js\"\nimport { logoutUser } from './actions/authActionCreators';\n\nexport const apiMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n  if (action.type !== constants.API) return next(action);\n\n  dispatch({ type: constants.TOGGLE_LOADER });\n  const AUTH_TOKEN = getState().user.token;\n  if (AUTH_TOKEN)\n    axios.defaults.headers.common['Authorization'] = `Bearer ${AUTH_TOKEN}`;\n  const {\n    url,\n    method,\n    success,\n    data,\n    postProcessSuccess,\n    postProcessError,\n  } = action.payload;\n\n  axios({\n    method,\n    url: API_URL + url,\n    data: data ? data : null,\n  })\n    .then((response) => {\n      dispatch({ type: constants.TOGGLE_LOADER });\n      if (success) dispatch(success(response.data));\n      if (postProcessSuccess) postProcessSuccess(response.data);\n    })\n    .catch((err) => {\n      dispatch({ type: constants.TOGGLE_LOADER });\n      if (!err.response) console.warn(err);\n      else {\n        if (err.response && err.response.status === 403) dispatch(logoutUser());\n        if (err.response.data.error?.message) {\n          if (postProcessError)\n            postProcessError(err.response.data.error.message);\n        }\n      }\n    });\n};\n","// export const API_URL = 'http://localhost:8080';\nexport const API_URL = 'https://publications-api.herokuapp.com';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport '@fortawesome/fontawesome-free/js/all';\n\nimport './includes/bootstrap';\nimport './index.css';\nimport App from './App';\nimport configureStore from './redux/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, applyMiddleware, compose } from 'redux';\n\nimport rootReducer from './reducers';\nimport { apiMiddleware } from './middlewares';\n\nexport default function configureStore(initialState) {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  return createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(apiMiddleware))\n  );\n}\n"],"sourceRoot":""}